{"ast":null,"code":"var _jsxFileName = \"/Users/anishghumara/my-first-react-app/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst boardSize = 10;\nconst numSnakes = 5;\nconst numLadders = 5;\nfunction App() {\n  _s();\n  const [position, setPosition] = useState(1);\n  const generateRandomNumber = (min, max) => {\n    return Math.floor(Math.random() * (max - min + 1)) + min;\n  };\n  const generateSnakesAndLadders = () => {\n    const snakes = Array.from({\n      length: numSnakes\n    }, () => generateRandomNumber(5, boardSize - 1));\n    const ladders = Array.from({\n      length: numLadders\n    }, () => generateRandomNumber(2, boardSize - 5));\n    return {\n      snakes,\n      ladders\n    };\n  };\n  const {\n    snakes,\n    ladders\n  } = generateSnakesAndLadders();\n  const checkSnakeOrLadder = position => {\n    const snakeIndex = snakes.indexOf(position);\n    const ladderIndex = ladders.indexOf(position);\n    if (snakeIndex !== -1) {\n      setPosition(position - generateRandomNumber(1, 3));\n    } else if (ladderIndex !== -1) {\n      setPosition(position + generateRandomNumber(1, 3));\n    } else {\n      setPosition(position);\n    }\n  };\n  const rollDice = () => {\n    const diceValue = generateRandomNumber(1, 6);\n    const newPosition = position + diceValue;\n    if (newPosition > boardSize * boardSize) {\n      alert('Congratulations! You won!');\n      setPosition(1);\n    } else {\n      checkSnakeOrLadder(newPosition);\n    }\n  };\n  const renderBoard = () => {\n    let cells = [];\n    let cellNumber = boardSize * boardSize;\n    for (let i = 0; i < boardSize; i++) {\n      let row = [];\n      for (let j = 0; j < boardSize; j++) {\n        row.push( /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"cell\",\n          children: [cellNumber === position ? /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"player-token\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 40\n          }, this) : null, /*#__PURE__*/_jsxDEV(\"div\", {\n            children: cellNumber\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 13\n          }, this)]\n        }, cellNumber, true, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this));\n        cellNumber--;\n      }\n      if (i % 2 !== 0) {\n        row.reverse();\n      }\n      cells.push( /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: row\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this));\n    }\n    return cells;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Snake and Ladder Game\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"board\",\n      children: renderBoard()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"controls\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: rollDice,\n        children: \"Roll Dice\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"player\",\n        children: [\"Player Position: \", position]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"CsgZE1gsUqxkJ+M4Bclsv16Fu6s=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","boardSize","numSnakes","numLadders","App","_s","position","setPosition","generateRandomNumber","min","max","Math","floor","random","generateSnakesAndLadders","snakes","Array","from","length","ladders","checkSnakeOrLadder","snakeIndex","indexOf","ladderIndex","rollDice","diceValue","newPosition","alert","renderBoard","cells","cellNumber","i","row","j","push","className","children","fileName","_jsxFileName","lineNumber","columnNumber","reverse","onClick","_c","$RefreshReg$"],"sources":["/Users/anishghumara/my-first-react-app/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport './App.css';\n\nconst boardSize = 10;\nconst numSnakes = 5;\nconst numLadders = 5;\n\nfunction App() {\n  const [position, setPosition] = useState(1);\n\n  const generateRandomNumber = (min, max) => {\n    return Math.floor(Math.random() * (max - min + 1)) + min;\n  };\n\n  const generateSnakesAndLadders = () => {\n    const snakes = Array.from({ length: numSnakes }, () => generateRandomNumber(5, boardSize - 1));\n    const ladders = Array.from({ length: numLadders }, () => generateRandomNumber(2, boardSize - 5));\n\n    return { snakes, ladders };\n  };\n\n  const { snakes, ladders } = generateSnakesAndLadders();\n\n  const checkSnakeOrLadder = (position) => {\n    const snakeIndex = snakes.indexOf(position);\n    const ladderIndex = ladders.indexOf(position);\n\n    if (snakeIndex !== -1) {\n      setPosition(position - generateRandomNumber(1, 3));\n    } else if (ladderIndex !== -1) {\n      setPosition(position + generateRandomNumber(1, 3));\n    } else {\n      setPosition(position);\n    }\n  };\n\n  const rollDice = () => {\n    const diceValue = generateRandomNumber(1, 6);\n    const newPosition = position + diceValue;\n\n    if (newPosition > boardSize * boardSize) {\n      alert('Congratulations! You won!');\n      setPosition(1);\n    } else {\n      checkSnakeOrLadder(newPosition);\n    }\n  };\n\n  const renderBoard = () => {\n    let cells = [];\n    let cellNumber = boardSize * boardSize;\n\n    for (let i = 0; i < boardSize; i++) {\n      let row = [];\n      for (let j = 0; j < boardSize; j++) {\n        row.push(\n          <div className=\"cell\" key={cellNumber}>\n            {cellNumber === position ? <div className=\"player-token\"></div> : null}\n            <div>{cellNumber}</div>\n          </div>\n        );\n        cellNumber--;\n      }\n      if (i % 2 !== 0) {\n        row.reverse();\n      }\n      cells.push(\n        <div className=\"row\" key={i}>\n          {row}\n        </div>\n      );\n    }\n    return cells;\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Snake and Ladder Game</h1>\n      <div className=\"board\">{renderBoard()}</div>\n      <div className=\"controls\">\n        <button onClick={rollDice}>Roll Dice</button>\n        <div className=\"player\">Player Position: {position}</div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}