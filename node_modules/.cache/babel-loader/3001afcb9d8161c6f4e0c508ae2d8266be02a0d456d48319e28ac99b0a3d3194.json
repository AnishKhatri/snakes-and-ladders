{"ast":null,"code":"var _jsxFileName = \"/Users/anishghumara/my-first-react-app/src/components/Game.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useMemo } from 'react';\nimport Board from \"./Board\";\nimport Dice from \"./Dice\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Game({\n  boardSize,\n  crookedDice\n}) {\n  _s();\n  const initPosition = 0;\n  const [position, setPosition] = useState(initPosition);\n  const [winner, setWinner] = useState(false);\n  const snakes = useMemo(() => [{\n    startPos: 98,\n    endPos: 2,\n    color: \"green\"\n  }, {\n    startPos: 53,\n    endPos: 38,\n    color: \"blue\"\n  }, {\n    startPos: 37,\n    endPos: 14,\n    color: \"brown\"\n  }, {\n    startPos: 72,\n    endPos: 56,\n    color: \"purple\"\n  }], []);\n  useEffect(() => {\n    const checkForSnake = () => {\n      const _snake = snakes.find(snake => {\n        return snake.startPos === position;\n      });\n      if (_snake) {\n        setPosition(_snake.endPos);\n      }\n    };\n    const timer = setTimeout(() => {\n      checkForSnake();\n    }, 200);\n    return () => clearTimeout(timer);\n  }, [position, snakes]);\n  const cellsCount = boardSize * boardSize;\n  const checkWinner = diceNum => {\n    const newPosition = position + diceNum;\n    if (newPosition > cellsCount) {\n      alert(`You need only ${cellsCount - position} to win. Please try again!`);\n      return false;\n    }\n    setPosition(newPosition);\n    return newPosition === cellsCount;\n  };\n  const onDiceRoll = diceNum => {\n    if (position === 0) {\n      if (diceNum !== 6) {\n        return;\n      }\n      diceNum = 1;\n    }\n    const winner = checkWinner(diceNum);\n    if (winner) setWinner(winner);\n  };\n  const resetGame = () => {\n    setPosition(initPosition);\n    setWinner(false);\n  };\n  const renderCongrats = () => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"congrats-msg\",\n        children: \"\\uD83C\\uDF89 Congratulations! You won! \\uD83C\\uDF89\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"button\",\n        onClick: resetGame,\n        children: \"Reset Game\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }, this);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"game\",\n    children: [/*#__PURE__*/_jsxDEV(Board, {\n      boardSize: boardSize,\n      snakes: snakes,\n      curPosition: position\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this), winner ? renderCongrats() : /*#__PURE__*/_jsxDEV(Dice, {\n      onDiceRoll: onDiceRoll,\n      isCrooked: crookedDice\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 36\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 81,\n    columnNumber: 5\n  }, this);\n}\n_s(Game, \"yZpp+/IymfJsMwxC70Z3ed/5PC8=\");\n_c = Game;\nvar _c;\n$RefreshReg$(_c, \"Game\");","map":{"version":3,"names":["React","useState","useEffect","useMemo","Board","Dice","jsxDEV","_jsxDEV","Game","boardSize","crookedDice","_s","initPosition","position","setPosition","winner","setWinner","snakes","startPos","endPos","color","checkForSnake","_snake","find","snake","timer","setTimeout","clearTimeout","cellsCount","checkWinner","diceNum","newPosition","alert","onDiceRoll","resetGame","renderCongrats","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","curPosition","isCrooked","_c","$RefreshReg$"],"sources":["/Users/anishghumara/my-first-react-app/src/components/Game.jsx"],"sourcesContent":["import React, { useState, useEffect, useMemo } from 'react';\nimport Board from \"./Board\";\nimport Dice from \"./Dice\";\n\nexport default function Game({ boardSize, crookedDice }) {\n  const initPosition = 0;\n  const [position, setPosition] = useState(initPosition);\n  const [winner, setWinner] = useState(false);\n\n  const snakes = useMemo(() => [{\n    startPos: 98,\n    endPos: 2,\n    color: \"green\",\n  }, {\n    startPos: 53,\n    endPos: 38,\n    color: \"blue\",\n  }, {\n    startPos: 37,\n    endPos: 14,\n    color: \"brown\",\n  }, {\n    startPos: 72,\n    endPos: 56,\n    color: \"purple\",\n  }], []);\n\n  useEffect(() => {\n    const checkForSnake = () => {\n      const _snake = snakes.find((snake) => {\n        return snake.startPos === position;\n      });\n      if (_snake) {\n        setPosition(_snake.endPos);\n      }\n    }\n\n    const timer = setTimeout(() => {\n      checkForSnake();\n    }, 200);\n\n    return () => clearTimeout(timer);\n  }, [position, snakes]);\n\n  const cellsCount = boardSize * boardSize;\n\n  const checkWinner = (diceNum) => {\n    const newPosition = position + diceNum;\n    if (newPosition > cellsCount) {\n      alert(`You need only ${cellsCount - position} to win. Please try again!`);\n      return false;\n    }\n    setPosition(newPosition);\n    return newPosition === cellsCount;\n  }\n\n  const onDiceRoll = (diceNum) => {\n    if (position === 0) {\n      if (diceNum !== 6) {\n        return;\n      }\n      diceNum = 1;\n    }\n    const winner = checkWinner(diceNum);\n    if (winner) setWinner(winner);\n  }\n\n  const resetGame = () => {\n    setPosition(initPosition);\n    setWinner(false);\n  }\n\n  const renderCongrats = () => {\n    return (<div className=''>\n      <div className=\"congrats-msg\">ðŸŽ‰ Congratulations! You won! ðŸŽ‰</div>\n      <button className=\"button\" onClick={resetGame}>Reset Game</button>\n    </div>);\n  }\n\n  return (\n    <div className=\"game\">\n      <Board boardSize={boardSize} snakes={snakes} curPosition={position} />\n      {winner ? renderCongrats() : <Dice onDiceRoll={onDiceRoll} isCrooked={crookedDice} />}\n    </div>\n  );\n}\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,EAAEC,OAAO,QAAQ,OAAO;AAC3D,OAAOC,KAAK,MAAM,SAAS;AAC3B,OAAOC,IAAI,MAAM,QAAQ;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,eAAe,SAASC,IAAIA,CAAC;EAAEC,SAAS;EAAEC;AAAY,CAAC,EAAE;EAAAC,EAAA;EACvD,MAAMC,YAAY,GAAG,CAAC;EACtB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGb,QAAQ,CAACW,YAAY,CAAC;EACtD,MAAM,CAACG,MAAM,EAAEC,SAAS,CAAC,GAAGf,QAAQ,CAAC,KAAK,CAAC;EAE3C,MAAMgB,MAAM,GAAGd,OAAO,CAAC,MAAM,CAAC;IAC5Be,QAAQ,EAAE,EAAE;IACZC,MAAM,EAAE,CAAC;IACTC,KAAK,EAAE;EACT,CAAC,EAAE;IACDF,QAAQ,EAAE,EAAE;IACZC,MAAM,EAAE,EAAE;IACVC,KAAK,EAAE;EACT,CAAC,EAAE;IACDF,QAAQ,EAAE,EAAE;IACZC,MAAM,EAAE,EAAE;IACVC,KAAK,EAAE;EACT,CAAC,EAAE;IACDF,QAAQ,EAAE,EAAE;IACZC,MAAM,EAAE,EAAE;IACVC,KAAK,EAAE;EACT,CAAC,CAAC,EAAE,EAAE,CAAC;EAEPlB,SAAS,CAAC,MAAM;IACd,MAAMmB,aAAa,GAAGA,CAAA,KAAM;MAC1B,MAAMC,MAAM,GAAGL,MAAM,CAACM,IAAI,CAAEC,KAAK,IAAK;QACpC,OAAOA,KAAK,CAACN,QAAQ,KAAKL,QAAQ;MACpC,CAAC,CAAC;MACF,IAAIS,MAAM,EAAE;QACVR,WAAW,CAACQ,MAAM,CAACH,MAAM,CAAC;MAC5B;IACF,CAAC;IAED,MAAMM,KAAK,GAAGC,UAAU,CAAC,MAAM;MAC7BL,aAAa,CAAC,CAAC;IACjB,CAAC,EAAE,GAAG,CAAC;IAEP,OAAO,MAAMM,YAAY,CAACF,KAAK,CAAC;EAClC,CAAC,EAAE,CAACZ,QAAQ,EAAEI,MAAM,CAAC,CAAC;EAEtB,MAAMW,UAAU,GAAGnB,SAAS,GAAGA,SAAS;EAExC,MAAMoB,WAAW,GAAIC,OAAO,IAAK;IAC/B,MAAMC,WAAW,GAAGlB,QAAQ,GAAGiB,OAAO;IACtC,IAAIC,WAAW,GAAGH,UAAU,EAAE;MAC5BI,KAAK,CAAE,iBAAgBJ,UAAU,GAAGf,QAAS,4BAA2B,CAAC;MACzE,OAAO,KAAK;IACd;IACAC,WAAW,CAACiB,WAAW,CAAC;IACxB,OAAOA,WAAW,KAAKH,UAAU;EACnC,CAAC;EAED,MAAMK,UAAU,GAAIH,OAAO,IAAK;IAC9B,IAAIjB,QAAQ,KAAK,CAAC,EAAE;MAClB,IAAIiB,OAAO,KAAK,CAAC,EAAE;QACjB;MACF;MACAA,OAAO,GAAG,CAAC;IACb;IACA,MAAMf,MAAM,GAAGc,WAAW,CAACC,OAAO,CAAC;IACnC,IAAIf,MAAM,EAAEC,SAAS,CAACD,MAAM,CAAC;EAC/B,CAAC;EAED,MAAMmB,SAAS,GAAGA,CAAA,KAAM;IACtBpB,WAAW,CAACF,YAAY,CAAC;IACzBI,SAAS,CAAC,KAAK,CAAC;EAClB,CAAC;EAED,MAAMmB,cAAc,GAAGA,CAAA,KAAM;IAC3B,oBAAQ5B,OAAA;MAAK6B,SAAS,EAAC,EAAE;MAAAC,QAAA,gBACvB9B,OAAA;QAAK6B,SAAS,EAAC,cAAc;QAAAC,QAAA,EAAC;MAA+B;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eACnElC,OAAA;QAAQ6B,SAAS,EAAC,QAAQ;QAACM,OAAO,EAAER,SAAU;QAAAG,QAAA,EAAC;MAAU;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC/D,CAAC;EACR,CAAC;EAED,oBACElC,OAAA;IAAK6B,SAAS,EAAC,MAAM;IAAAC,QAAA,gBACnB9B,OAAA,CAACH,KAAK;MAACK,SAAS,EAAEA,SAAU;MAACQ,MAAM,EAAEA,MAAO;MAAC0B,WAAW,EAAE9B;IAAS;MAAAyB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,EACrE1B,MAAM,GAAGoB,cAAc,CAAC,CAAC,gBAAG5B,OAAA,CAACF,IAAI;MAAC4B,UAAU,EAAEA,UAAW;MAACW,SAAS,EAAElC;IAAY;MAAA4B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAClF,CAAC;AAEV;AAAC9B,EAAA,CAjFuBH,IAAI;AAAAqC,EAAA,GAAJrC,IAAI;AAAA,IAAAqC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}