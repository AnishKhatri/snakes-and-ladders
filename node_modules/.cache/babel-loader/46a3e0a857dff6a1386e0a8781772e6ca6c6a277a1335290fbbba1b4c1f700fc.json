{"ast":null,"code":"var _jsxFileName = \"/Users/anishghumara/my-first-react-app/src/components/Board.jsx\";\nimport Cell from \"./Cell\";\nimport Row from \"./Row\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Board({\n  boardSize,\n  curPosition\n}) {\n  const renderBoard = () => {\n    let cellNumber = boardSize;\n    let rowCount = Math.sqrt(boardSize);\n    let rows = [];\n    for (let i = 0; i < rowCount; i++) {\n      let rowCells = [];\n      for (let j = 0; j < boardSize / rowCount; j++) {\n        rowCells.push( /*#__PURE__*/_jsxDEV(Cell, {\n          cellNumber: cellNumber,\n          hasPlayer: cellNumber === curPosition\n        }, cellNumber, false, {\n          fileName: _jsxFileName,\n          lineNumber: 15,\n          columnNumber: 11\n        }, this));\n        cellNumber--;\n      }\n      rows.push( /*#__PURE__*/_jsxDEV(Row, {\n        rowCount: i,\n        children: rowCells\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 17\n      }, this));\n    }\n    return rows;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"board\",\n    children: renderBoard()\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n}\n_c = Board;\nvar _c;\n$RefreshReg$(_c, \"Board\");","map":{"version":3,"names":["Cell","Row","jsxDEV","_jsxDEV","Board","boardSize","curPosition","renderBoard","cellNumber","rowCount","Math","sqrt","rows","i","rowCells","j","push","hasPlayer","fileName","_jsxFileName","lineNumber","columnNumber","children","className","_c","$RefreshReg$"],"sources":["/Users/anishghumara/my-first-react-app/src/components/Board.jsx"],"sourcesContent":["import Cell from \"./Cell\";\nimport Row from \"./Row\";\n\nexport default function Board({ boardSize, curPosition }) {\n\n  const renderBoard = () => {\n    let cellNumber = boardSize;\n    let rowCount = Math.sqrt(boardSize);\n\n    let rows = [];\n    for (let i = 0; i < rowCount; i++) {\n      let rowCells = [];\n      for (let j = 0; j < boardSize / rowCount; j++) {\n        rowCells.push(\n          <Cell key={cellNumber} cellNumber={cellNumber} hasPlayer={cellNumber === curPosition} />\n        );\n        cellNumber--;\n      }\n      rows.push(<Row rowCount={i} key={i}>{rowCells}</Row>);\n    }\n    return rows;\n  };\n\n  return (\n    <div className=\"board\">{renderBoard()}</div>\n  );\n}\n"],"mappings":";AAAA,OAAOA,IAAI,MAAM,QAAQ;AACzB,OAAOC,GAAG,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExB,eAAe,SAASC,KAAKA,CAAC;EAAEC,SAAS;EAAEC;AAAY,CAAC,EAAE;EAExD,MAAMC,WAAW,GAAGA,CAAA,KAAM;IACxB,IAAIC,UAAU,GAAGH,SAAS;IAC1B,IAAII,QAAQ,GAAGC,IAAI,CAACC,IAAI,CAACN,SAAS,CAAC;IAEnC,IAAIO,IAAI,GAAG,EAAE;IACb,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGJ,QAAQ,EAAEI,CAAC,EAAE,EAAE;MACjC,IAAIC,QAAQ,GAAG,EAAE;MACjB,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGV,SAAS,GAAGI,QAAQ,EAAEM,CAAC,EAAE,EAAE;QAC7CD,QAAQ,CAACE,IAAI,eACXb,OAAA,CAACH,IAAI;UAAkBQ,UAAU,EAAEA,UAAW;UAACS,SAAS,EAAET,UAAU,KAAKF;QAAY,GAA1EE,UAAU;UAAAU,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAkE,CACzF,CAAC;QACDb,UAAU,EAAE;MACd;MACAI,IAAI,CAACI,IAAI,eAACb,OAAA,CAACF,GAAG;QAACQ,QAAQ,EAAEI,CAAE;QAAAS,QAAA,EAAUR;MAAQ,GAAZD,CAAC;QAAAK,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAiB,CAAC,CAAC;IACvD;IACA,OAAOT,IAAI;EACb,CAAC;EAED,oBACET,OAAA;IAAKoB,SAAS,EAAC,OAAO;IAAAD,QAAA,EAAEf,WAAW,CAAC;EAAC;IAAAW,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAM,CAAC;AAEhD;AAACG,EAAA,GAvBuBpB,KAAK;AAAA,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}