{"ast":null,"code":"var _jsxFileName = \"/Users/anishghumara/my-first-react-app/src/components/Board.jsx\";\nimport Cell from \"./Cell\";\nimport Row from \"./Row\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Board({\n  boardSize,\n  curPosition\n}) {\n  const renderCells = () => {\n    let cellNumber = boardSize * boardSize;\n    let rows = [];\n    for (let i = 0; i < boardSize; i++) {\n      let rowCells = [];\n      for (let j = 0; j < boardSize; j++) {\n        rowCells.push( /*#__PURE__*/_jsxDEV(Cell, {\n          cellNumber: cellNumber,\n          hasPlayer: cellNumber === curPosition\n        }, j + i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 13,\n          columnNumber: 11\n        }, this));\n        cellNumber--;\n      }\n      rows.push( /*#__PURE__*/_jsxDEV(Row, {\n        rowCount: i,\n        children: rowCells\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 17\n      }, this));\n    }\n    return rows;\n  };\n  const renderSnakes = () => {\n    let snakes = [];\n    {\n      snakes.map(snake => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: snake.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 7\n      }, this));\n    }\n  };\n  const renderBoard = () => {\n    renderSnakes();\n    renderCells();\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"board\",\n    children: renderBoard()\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n}\n_c = Board;\nvar _c;\n$RefreshReg$(_c, \"Board\");","map":{"version":3,"names":["Cell","Row","jsxDEV","_jsxDEV","Board","boardSize","curPosition","renderCells","cellNumber","rows","i","rowCells","j","push","hasPlayer","fileName","_jsxFileName","lineNumber","columnNumber","rowCount","children","renderSnakes","snakes","map","snake","title","renderBoard","className","_c","$RefreshReg$"],"sources":["/Users/anishghumara/my-first-react-app/src/components/Board.jsx"],"sourcesContent":["import Cell from \"./Cell\";\nimport Row from \"./Row\";\n\nexport default function Board({ boardSize, curPosition }) {\n\n  const renderCells = () => {\n    let cellNumber = boardSize * boardSize;\n    let rows = [];\n    for (let i = 0; i < boardSize; i++) {\n      let rowCells = [];\n      for (let j = 0; j < boardSize; j++) {\n        rowCells.push(\n          <Cell key={j + i}\n           cellNumber={cellNumber}\n           hasPlayer={cellNumber === curPosition} />\n        );\n        cellNumber--;\n      }\n      rows.push(<Row key={i} rowCount={i}>{rowCells}</Row>);\n    }\n    return rows;\n  }\n\n  const renderSnakes = () => {\n    let snakes = [];\n    {snakes.map((snake) => (\n      <li>{snake.title}</li>\n    ))}\n  }\n\n  const renderBoard = () => {\n    renderSnakes();\n    renderCells();\n  };\n\n  return (\n    <div className=\"board\">{renderBoard()}</div>\n  );\n}\n"],"mappings":";AAAA,OAAOA,IAAI,MAAM,QAAQ;AACzB,OAAOC,GAAG,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExB,eAAe,SAASC,KAAKA,CAAC;EAAEC,SAAS;EAAEC;AAAY,CAAC,EAAE;EAExD,MAAMC,WAAW,GAAGA,CAAA,KAAM;IACxB,IAAIC,UAAU,GAAGH,SAAS,GAAGA,SAAS;IACtC,IAAII,IAAI,GAAG,EAAE;IACb,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGL,SAAS,EAAEK,CAAC,EAAE,EAAE;MAClC,IAAIC,QAAQ,GAAG,EAAE;MACjB,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGP,SAAS,EAAEO,CAAC,EAAE,EAAE;QAClCD,QAAQ,CAACE,IAAI,eACXV,OAAA,CAACH,IAAI;UACJQ,UAAU,EAAEA,UAAW;UACvBM,SAAS,EAAEN,UAAU,KAAKF;QAAY,GAF5BM,CAAC,GAAGF,CAAC;UAAAK,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAEyB,CAC3C,CAAC;QACDV,UAAU,EAAE;MACd;MACAC,IAAI,CAACI,IAAI,eAACV,OAAA,CAACF,GAAG;QAASkB,QAAQ,EAAET,CAAE;QAAAU,QAAA,EAAET;MAAQ,GAAzBD,CAAC;QAAAK,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAA8B,CAAC,CAAC;IACvD;IACA,OAAOT,IAAI;EACb,CAAC;EAED,MAAMY,YAAY,GAAGA,CAAA,KAAM;IACzB,IAAIC,MAAM,GAAG,EAAE;IACf;MAACA,MAAM,CAACC,GAAG,CAAEC,KAAK,iBAChBrB,OAAA;QAAAiB,QAAA,EAAKI,KAAK,CAACC;MAAK;QAAAV,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CACtB,CAAC;IAAA;EACJ,CAAC;EAED,MAAMQ,WAAW,GAAGA,CAAA,KAAM;IACxBL,YAAY,CAAC,CAAC;IACdd,WAAW,CAAC,CAAC;EACf,CAAC;EAED,oBACEJ,OAAA;IAAKwB,SAAS,EAAC,OAAO;IAAAP,QAAA,EAAEM,WAAW,CAAC;EAAC;IAAAX,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAM,CAAC;AAEhD;AAACU,EAAA,GAnCuBxB,KAAK;AAAA,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}