{"ast":null,"code":"var _jsxFileName = \"/Users/anishghumara/my-first-react-app/src/components/Game.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport Board from \"./Board\";\nimport Dice from \"./Dice\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Game({\n  boardSize,\n  crookedDice\n}) {\n  _s();\n  const initPosition = 0;\n  const [position, setPosition] = useState(initPosition);\n  const [winner, setWinner] = useState(false);\n  const checkForSnake = () => {\n    const _snake = snakes.find(snake => {\n      return snake.startPos === position;\n    });\n    if (_snake) {\n      setPosition(_snake.endPos);\n    }\n  };\n  useEffect(() => {\n    const intervalId = setTimeout(() => {\n      checkForSnake();\n    }, 1000);\n\n    // clear interval on re-render to avoid memory leaks\n    return () => clearInterval(intervalId);\n    // add timeLeft as a dependency to re-rerun the effect\n    // when we update it\n  }, [position]);\n  const cellsCount = boardSize * boardSize;\n  const checkWinner = diceNum => {\n    const newPosition = position + diceNum;\n    if (newPosition > cellsCount) {\n      alert('You need only ' + (cellsCount - position) + ' to win. Please try again!');\n      return false;\n    }\n    setPosition(newPosition);\n    return newPosition === cellsCount;\n  };\n  const onDiceRoll = diceNum => {\n    if (position === 0) {\n      if (diceNum !== 6) {\n        return;\n      }\n      diceNum = 1;\n    }\n    const winner = checkWinner(diceNum);\n    if (winner) setWinner(winner);\n  };\n  const resetGame = () => {\n    setPosition(initPosition);\n    setWinner(false);\n  };\n  const renderCongrats = () => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Congratulations! You won!!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: resetGame,\n        children: \"Reset Game\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }, this);\n  };\n  const snakes = [{\n    startPos: 98,\n    endPos: 2,\n    color: \"green\"\n  }, {\n    startPos: 53,\n    endPos: 38,\n    color: \"blue\"\n  }, {\n    startPos: 37,\n    endPos: 14,\n    color: \"brown\"\n  }, {\n    startPos: 72,\n    endPos: 56,\n    color: \"purple\"\n  }];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"game\",\n    children: [/*#__PURE__*/_jsxDEV(Board, {\n      boardSize: boardSize,\n      snakes: snakes,\n      curPosition: position\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this), winner ? renderCongrats() : /*#__PURE__*/_jsxDEV(Dice, {\n      onDiceRoll: onDiceRoll,\n      isCrooked: crookedDice\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 36\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 84,\n    columnNumber: 5\n  }, this);\n}\n_s(Game, \"+xUlIi7MZMBOCwdolDF/UFRW070=\");\n_c = Game;\nvar _c;\n$RefreshReg$(_c, \"Game\");","map":{"version":3,"names":["React","useState","useEffect","Board","Dice","jsxDEV","_jsxDEV","Game","boardSize","crookedDice","_s","initPosition","position","setPosition","winner","setWinner","checkForSnake","_snake","snakes","find","snake","startPos","endPos","intervalId","setTimeout","clearInterval","cellsCount","checkWinner","diceNum","newPosition","alert","onDiceRoll","resetGame","renderCongrats","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","color","className","curPosition","isCrooked","_c","$RefreshReg$"],"sources":["/Users/anishghumara/my-first-react-app/src/components/Game.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport Board from \"./Board\";\nimport Dice from \"./Dice\";\n\nexport default function Game({ boardSize, crookedDice }) {\n  const initPosition = 0;\n  const [position, setPosition] = useState(initPosition);\n  const [winner, setWinner] = useState(false);\n\n  const checkForSnake = () => {\n    const _snake = snakes.find((snake) => {\n      return snake.startPos === position;\n    });\n    if (_snake) {\n      setPosition(_snake.endPos);\n    }\n  }\n\n  useEffect(() => {\n    const intervalId = setTimeout(() => {\n      checkForSnake();\n    }, 1000);\n\n    // clear interval on re-render to avoid memory leaks\n    return () => clearInterval(intervalId);\n    // add timeLeft as a dependency to re-rerun the effect\n    // when we update it\n  }, [position]);\n\n  const cellsCount = boardSize * boardSize;\n\n  const checkWinner = (diceNum) => {\n    const newPosition = position + diceNum;\n    if (newPosition > cellsCount) {\n      alert('You need only ' + (cellsCount - position) + ' to win. Please try again!');\n      return false;\n    }\n    setPosition(newPosition);\n    return newPosition === cellsCount;\n  }\n\n  const onDiceRoll = (diceNum) => {\n    if (position === 0) {\n      if (diceNum !== 6) {\n        return;\n      }\n      diceNum = 1;\n    }\n    const winner = checkWinner(diceNum);\n    if (winner) setWinner(winner);\n  }\n\n  const resetGame = () => {\n    setPosition(initPosition);\n    setWinner(false);\n  }\n\n  const renderCongrats = () => {\n    return (<div>\n      <div>Congratulations! You won!!</div>\n      <button onClick={resetGame}>Reset Game</button>\n    </div>);\n  }\n\n  const snakes = [{\n    startPos: 98,\n    endPos: 2,\n    color: \"green\",\n  }, {\n    startPos: 53,\n    endPos: 38,\n    color: \"blue\",\n  }, {\n    startPos: 37,\n    endPos: 14,\n    color: \"brown\",\n  }, {\n    startPos: 72,\n    endPos: 56,\n    color: \"purple\",\n  }];\n\n  return (\n    <div className='game'>\n      <Board boardSize={boardSize} snakes={snakes} curPosition={position} />\n      {winner ? renderCongrats() : <Dice onDiceRoll={onDiceRoll} isCrooked={crookedDice} />}\n    </div>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}