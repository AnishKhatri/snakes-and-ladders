{"ast":null,"code":"var _jsxFileName = \"/Users/anishghumara/my-first-react-app/src/components/Board.jsx\";\nimport Cell from \"./Cell\";\nimport Row from \"./Row\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Board({\n  boardSize,\n  curPosition\n}) {\n  const renderBoard = () => {\n    let cellNumber = boardSize;\n    let halfBoardSize = boardSize / boardSize;\n    for (let i = 0; i < halfBoardSize; i++) {\n      let rowCells = [];\n      for (let j = 0; j < halfBoardSize; j++) {\n        rowCells.push( /*#__PURE__*/_jsxDEV(Cell, {\n          cellNumber: cellNumber,\n          hasPlayer: cellNumber === curPosition\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 14,\n          columnNumber: 11\n        }, this));\n      }\n      /*#__PURE__*/_jsxDEV(Row, {\n        rowCount: i,\n        children: rowCells\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 7\n      }, this);\n    }\n    return;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"board\",\n    children: renderBoard()\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n}\n_c = Board;\nexport default Board;\nvar _c;\n$RefreshReg$(_c, \"Board\");","map":{"version":3,"names":["Cell","Row","jsxDEV","_jsxDEV","Board","boardSize","curPosition","renderBoard","cellNumber","halfBoardSize","i","rowCells","j","push","hasPlayer","fileName","_jsxFileName","lineNumber","columnNumber","rowCount","children","className","_c","$RefreshReg$"],"sources":["/Users/anishghumara/my-first-react-app/src/components/Board.jsx"],"sourcesContent":["import Cell from \"./Cell\";\nimport Row from \"./Row\";\n\nfunction Board({ boardSize, curPosition }) {\n\n  const renderBoard = () => {\n    let cellNumber = boardSize;\n    let halfBoardSize = boardSize / boardSize;\n\n    for (let i = 0; i < halfBoardSize; i++) {\n      let rowCells = [];\n      for (let j = 0; j < halfBoardSize; j++) {\n        rowCells.push(\n          <Cell cellNumber={cellNumber} hasPlayer={cellNumber === curPosition} />\n        );\n      }\n      <Row rowCount={i} >{rowCells}</Row>\n    }\n    return\n  };\n\n  return (\n    <div className=\"board\">{renderBoard()}</div>\n  );\n}\n\nexport default Board;\n"],"mappings":";AAAA,OAAOA,IAAI,MAAM,QAAQ;AACzB,OAAOC,GAAG,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExB,SAASC,KAAKA,CAAC;EAAEC,SAAS;EAAEC;AAAY,CAAC,EAAE;EAEzC,MAAMC,WAAW,GAAGA,CAAA,KAAM;IACxB,IAAIC,UAAU,GAAGH,SAAS;IAC1B,IAAII,aAAa,GAAGJ,SAAS,GAAGA,SAAS;IAEzC,KAAK,IAAIK,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGD,aAAa,EAAEC,CAAC,EAAE,EAAE;MACtC,IAAIC,QAAQ,GAAG,EAAE;MACjB,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGH,aAAa,EAAEG,CAAC,EAAE,EAAE;QACtCD,QAAQ,CAACE,IAAI,eACXV,OAAA,CAACH,IAAI;UAACQ,UAAU,EAAEA,UAAW;UAACM,SAAS,EAAEN,UAAU,KAAKF;QAAY;UAAAS,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CACxE,CAAC;MACH;MACA,aAAAf,OAAA,CAACF,GAAG;QAACkB,QAAQ,EAAET,CAAE;QAAAU,QAAA,EAAGT;MAAQ;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC;IACrC;IACA;EACF,CAAC;EAED,oBACEf,OAAA;IAAKkB,SAAS,EAAC,OAAO;IAAAD,QAAA,EAAEb,WAAW,CAAC;EAAC;IAAAQ,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAM,CAAC;AAEhD;AAACI,EAAA,GArBQlB,KAAK;AAuBd,eAAeA,KAAK;AAAC,IAAAkB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}