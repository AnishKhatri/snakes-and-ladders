{"ast":null,"code":"var _jsxFileName = \"/Users/anishghumara/my-first-react-app/src/components/Game.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst boardSize = 10;\nfunction Game(props) {\n  _s();\n  const [position, setPosition] = useState(1);\n  const generateRandomNumber = (min, max) => {\n    return Math.floor(Math.random() * (max - min + 1)) + min;\n  };\n  const rollDice = () => {\n    const diceValue = generateRandomNumber(1, 6);\n    const newPosition = position + diceValue;\n    if (newPosition > props.boardSize * props.boardSize) {\n      alert('Congratulations! You won!');\n      setPosition(1);\n    } else {\n      setPosition(newPosition);\n    }\n  };\n  const renderBoard = () => {\n    let cells = [];\n    let cellNumber = boardSize * boardSize;\n    for (let i = 0; i < boardSize; i++) {\n      let rows = [];\n      for (let j = 0; j < boardSize; j++) {\n        rows.push( /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"cell\",\n          children: [cellNumber === position ? /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"player-token\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 40\n          }, this) : null, /*#__PURE__*/_jsxDEV(\"div\", {\n            children: cellNumber--\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 13\n          }, this)]\n        }, cellNumber, true, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 11\n        }, this));\n      }\n      if (i % 2 !== 0) {\n        rows.reverse();\n      }\n      cells.push( /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: rows\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this));\n    }\n    return cells;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"game\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"board\",\n      children: renderBoard()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"controls\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: rollDice,\n        children: \"Roll Dice\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"player\",\n        children: [\"Player Position: \", position]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n}\n_s(Game, \"CsgZE1gsUqxkJ+M4Bclsv16Fu6s=\");\n_c = Game;\nexport default Game;\nvar _c;\n$RefreshReg$(_c, \"Game\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","boardSize","Game","props","_s","position","setPosition","generateRandomNumber","min","max","Math","floor","random","rollDice","diceValue","newPosition","alert","renderBoard","cells","cellNumber","i","rows","j","push","className","children","fileName","_jsxFileName","lineNumber","columnNumber","reverse","onClick","_c","$RefreshReg$"],"sources":["/Users/anishghumara/my-first-react-app/src/components/Game.jsx"],"sourcesContent":["import React, { useState } from 'react';\n\nconst boardSize = 10;\n\nfunction Game(props) {\n\n  const [position, setPosition] = useState(1);\n\n  const generateRandomNumber = (min, max) => {\n    return Math.floor(Math.random() * (max - min + 1)) + min;\n  };\n\n  const rollDice = () => {\n    const diceValue = generateRandomNumber(1, 6);\n    const newPosition = position + diceValue;\n\n    if (newPosition > props.boardSize * props.boardSize) {\n      alert('Congratulations! You won!');\n      setPosition(1);\n    } else {\n      setPosition(newPosition);\n    }\n  };\n\n  const renderBoard = () => {\n    let cells = [];\n    let cellNumber = boardSize * boardSize;\n\n    for (let i = 0; i < boardSize; i++) {\n      let rows = [];\n      for (let j = 0; j < boardSize; j++) {\n        rows.push(\n          <div className=\"cell\" key={cellNumber}>\n            {cellNumber === position ? <div className=\"player-token\"></div> : null}\n            <div>{cellNumber--}</div>\n          </div>\n        );\n      }\n      if (i % 2 !== 0) {\n        rows.reverse();\n      }\n      cells.push(\n        <div className=\"row\" key={i}>\n          {rows}\n        </div>\n      );\n    }\n    return cells;\n  };\n\n  return (\n    <div className='game'>\n      <div className=\"board\">{renderBoard()}</div>\n      <div className=\"controls\">\n        <button onClick={rollDice}>Roll Dice</button>\n        <div className=\"player\">Player Position: {position}</div>\n      </div>\n    </div>\n  );\n}\n\nexport default Game;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}